@model MovieTheater.MovieCast

@{
    ViewBag.Title = "AddMovieCast";
}



@using (Html.BeginForm("AddMovieCast", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="card">
        <h3 class="card-header">
            AddMovieCast
        </h3>
        <div class="card-body">
            <div class="d-flex justify-content-around" style="margin-bottom:20px;">
                <div class="d-grid gap-3">

                    <div class="form-floating">
                        @Html.EditorFor(model => model., new { htmlAttributes = new { @class = "form-control mw-100" } })
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "" })

                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                    </div>

                </div>
            </div>

        </div>
    </div>

            <div class="form-horizontal">
                <h4>MovieCast</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.MovieID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MovieID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MovieID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ActorID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ActorID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ActorID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-success" />
                    </div>
                </div>
            </div>
            }

            

            <div>
                @Html.ActionLink("Back to List", "ListMovieCast")
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
