@model MovieTheater.Actors

@{
    ViewBag.Title = "DeleteActor";
}

<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
    <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
    </symbol>
    <symbol id="info-fill" fill="currentColor" viewBox="0 0 16 16">
        <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z" />
    </symbol>
    <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
    </symbol>
</svg>

<div class="alert alert-danger d-flex align-items-center" role="alert">
    <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
    <div>
        Are You Sure You want to delete this actor?
    </div>
</div>

<div class="card" style="width:900px;">
    <div class="card-header" style="margin-bottom: 10px; background-color: #FFCDD2; ">
        <h4>Delete Actor</h4>
    </div>
    <div class="d-flex justify-content-around" style="margin-bottom:20px;">

        <div>
            <div class="row g-2" style="margin-bottom:10px;">
                <div class="col">
                    <div class="form-floating">

                        @Html.EditorFor(model => model.ActorID, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.LabelFor(model => model.ActorID, htmlAttributes: new { disabled = "disabled" })

                        @Html.ValidationMessageFor(model => model.ActorID, "", new { @class = "text-danger" })


                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col">
                    <div class="form-floating">
                        @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "" })

                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>


            </div>





            <div class="row g-2">


                <div class="col-md">
                    <div class="form-floating">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })

                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "" })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="col">
                    <div class="form-floating">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "" })

                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                    </div>
                </div>
            </div>

            <div style="width:450px;margin-top:35px;" class="btn-group" role="group" aria-label="Basic mixed styles example">
                @Html.ActionLink("Back to List", "ListActors", null, new { @class = "btn btn-outline-secondary" })
                @Html.ActionLink("Edit", "EditActor", new { id = Model.ActorID }, new { @class = "btn btn-outline-secondary" })
                @Html.ActionLink("Delete Actor", "DeleteActor", "Admin", new { id = Model.ActorID }, new { @class = "btn btn-danger" })
            </div>

        </div>


        <div>
            @if (Model.ActorIMG != null)
            {
                <img src="@Url.Action("GetActorIMG", "Admin", new { id = Model.ActorID })" alt="Movie Image" />

            }
            else
            {
                <h2>Image Is Not Avaliable </h2>
            }
        </div>


    </div>

</div>
